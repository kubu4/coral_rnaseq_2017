$VAR1 = {
          'non-bleached-44' => [
                                 'non-bleached_44_01',
                                 'non-bleached_44_02',
                                 'non-bleached_44_03'
                               ],
          'bleached-44' => [
                             'bleached_44_01',
                             'bleached_44_02',
                             'bleached_44_03'
                           ]
        };
CMD: R --no-save --no-restore --no-site-file --no-init-file -q < salmon.gene.counts.matrix.bleached-44_vs_non-bleached-44.bleached-44.vs.non-bleached-44.EdgeR.Rscript
> if (! require(edgeR)) {
+    source("https://bioconductor.org/biocLite.R")
+    biocLite("edgeR")
+    library(edgeR)
+ }
> 
> data = read.table("/gscratch/scrubbed/samwhite/outputs/20211015_mcap_DEG_pairwise_comparisons/bleached-44_non-bleached-44/salmon.gene.counts.matrix", header=T, row.names=1, com='')
> col_ordering = c(1,2,3,4,5,6)
> rnaseqMatrix = data[,col_ordering]
> rnaseqMatrix = round(rnaseqMatrix)
> rnaseqMatrix = rnaseqMatrix[rowSums(cpm(rnaseqMatrix) > 1) >= 2,]
> conditions = factor(c(rep("bleached-44", 3), rep("non-bleached-44", 3)))
> 
> exp_study = DGEList(counts=rnaseqMatrix, group=conditions)
> exp_study = calcNormFactors(exp_study)
> exp_study = estimateDisp(exp_study)
> et = exactTest(exp_study, pair=c("bleached-44", "non-bleached-44"))
> tTags = topTags(et,n=NULL)
> result_table = tTags$table
> result_table = data.frame(sampleA="bleached-44", sampleB="non-bleached-44", result_table)
> result_table$logFC = -1 * result_table$logFC
> write.table(result_table, file='salmon.gene.counts.matrix.bleached-44_vs_non-bleached-44.edgeR.DE_results', sep='	', quote=F, row.names=T)
> write.table(rnaseqMatrix, file='salmon.gene.counts.matrix.bleached-44_vs_non-bleached-44.edgeR.count_matrix', sep='	', quote=F, row.names=T)
> source("/gscratch/srlab/programs/trinityrnaseq-v2.9.0/Analysis/DifferentialExpression/R/rnaseq_plot_funcs.R")
> pdf("salmon.gene.counts.matrix.bleached-44_vs_non-bleached-44.edgeR.DE_results.MA_n_Volcano.pdf")
> plot_MA_and_Volcano(rownames(result_table), result_table$logCPM, result_table$logFC, result_table$FDR)
> dev.off()
null device 
          1 
> 
